#!/bin/bash

# CDDL HEADER START
#
# This file and its contents are supplied under the terms of the
# Common Development and Distribution License ("CDDL"), version 1.0.
# You may only use this file in accordance with the terms of version
# 1.0 of the CDDL.
#
# A full copy of the text of the CDDL should have accompanied this
# source.  A copy of the CDDL is also available via the Internet at
# http://www.illumos.org/license/CDDL.
#
# CDDL HEADER END

# Copyright 2024 Saso Kiselkov. All rights reserved.

source ../build_dep.common

CURL="curl-8.4.0.tar.bz2"

CONFOPTS_COMMON="-DBUILD_SHARED_LIBS=OFF -DBUILD_CURL_EXE=OFF \
    -DBUILD_STATIC_LIBS=ON -DHTTP_ONLY=ON -DENABLE_UNIX_SOCKETS=OFF \
    -DCURL_DISABLE_COOKIES=ON -DCURL_DISABLE_NTLM=ON \
    -DCURL_WINDOWS_SSPI=OFF -DUSE_LIBIDN2=OFF -DUSE_WIN32_IDN=OFF \
    -DCURL_USE_LIBSSH2=OFF -DUSE_NGHTTP2=OFF -DCURL_ZSTD=OFF \
    -DCURL_USE_LIBPSL=OFF -DCURL_STATIC_CRT=ON -DCURL_USE_OPENSSL=ON"
CONFOPTS_AUTOCONF="--enable-static --disable-shared --disable-ftp \
    --disable-file --disable-ldap --disable-ldaps --disable-rtsp \
    --disable-dict --disable-telnet --disable-tftp --disable-pop3 \
    --disable-imap --disable-smb --disable-smtp --disable-gopher \
    --disable-manual --disable-pthreads --disable-unix-sockets \
    --disable-ipv6 --disable-threaded-resolver --disable-cookies \
    --disable-ntlm-wb --disable-sspi \
    --without-winidn --without-libssh2 --without-librtmp \
    --without-libidn2 --without-nghttp2 --without-zsh-functions-dir \
    --with-pic --without-zstd  --without-brotli"

# We must fall back to autoconf in case CMake is too old
CMAKE_VERSION_STR="$(cmake --version | head -n 1 | awk '{print $3}')"
CMAKE_VERSION_MAJOR="$(echo "$CMAKE_VERSION_STR" | cut -d . -f 1)"
CMAKE_VERSION_MINOR="$(echo "$CMAKE_VERSION_STR" | cut -d . -f 2)"
if [ "$CMAKE_VERSION_MAJOR" -gt 3 ] || \
    ( [ "$CMAKE_VERSION_MAJOR" -ge 3 ] && [ "$CMAKE_VERSION_MINOR" -ge 7 ] );
    then
	export CONFIG_CMAKE=1
fi

case `uname` in
	Linux)
		if [ -n "$CONFIG_CMAKE" ]; then
			build_dep "linux-64" "$CONFOPTS_COMMON \
			    -DOPENSSL_ROOT_DIR=$(pwd)/../ssl/openssl-linux-64 \
			    -DZLIB_INCLUDE_DIR=$(pwd)/../zlib/zlib-linux-64/include \
			    -DZLIB_LIBRARY=$(pwd)/../zlib/zlib-linux-64/lib/libz.a" \
			    "$CURL" "libcurl" "lib/libcurl.a" || exit 1
			build_dep "win-64" \
			    "$CONFOPTS_COMMON \
			    -DOPENSSL_ROOT_DIR=$(pwd)/../ssl/openssl-win-64 \
			    -DZLIB_INCLUDE_DIR=$(pwd)/../zlib/zlib-win-64/include \
			    -DZLIB_LIBRARY=$(pwd)/../zlib/zlib-win-64/lib/libz.a" \
			    "$CURL" "libcurl" "lib/libcurl.a" || exit 1
		else
			LIBS="-lpthread" build_dep "linux-64" \
			    "$CONFOPTS_AUTOCONF \
			    --with-ssl=$(pwd)/../ssl/openssl-linux-64 \
			    --with-zlib=$(pwd)/../zlib/zlib-linux-64" \
			    "$CURL" "libcurl" "lib/libcurl.a" || exit 1
			LIBS="-lcrypt32" build_dep "win-64" \
			    "$CONFOPTS_AUTOCONF --host=x86_64-w64-mingw32 \
			    --with-ssl=$(pwd)/../ssl/openssl-win-64 \
			    --with-zlib=$(pwd)/../zlib/zlib-win-64" \
			    "$CURL" "libcurl" "lib/libcurl.a" || exit 1
		fi
		;;
	Darwin)
		build_dep "mac-64" "$CONFOPTS_COMMON \
		    -DOPENSSL_ROOT_DIR=$(pwd)/../ssl/openssl-mac-64 \
		    -DZLIB_INCLUDE_DIR=$(pwd)/../zlib/zlib-mac-64/include \
		    -DZLIB_LIBRARY=$(pwd)/../zlib/zlib-mac-64/lib/libz.a \
		    -DCMAKE_OSX_ARCHITECTURES='x86_64;arm64'" \
		    "$CURL" "libcurl" "lib/libcurl.a"
		;;
	*)
		echo "Unsupported build platform" >&2
		exit 1
		;;
esac
