#!/bin/bash

# CDDL HEADER START
#
# This file and its contents are supplied under the terms of the
# Common Development and Distribution License ("CDDL"), version 1.0.
# You may only use this file in accordance with the terms of version
# 1.0 of the CDDL.
#
# A full copy of the text of the CDDL should have accompanied this
# source.  A copy of the CDDL is also available via the Internet at
# http://www.illumos.org/license/CDDL.
#
# CDDL HEADER END

# Copyright 2021 Saso Kiselkov. All rights reserved.

# This file needs to be called from your makefile when using libacfutil.
# It produces the necessary cflags and libs to include all the build-time
# and link-time dependencies of libacfutils.
#
# You should invoke this script in one of the following two ways:
#
# 1) to generate CFLAGS:
#	$ <path_to_libacfutils>/pkg-config-deps 'ARCH' --cflags
# 1) to generate LDFLAGS:
#	$ <path_to_libacfutils>/pkg-config-deps 'ARCH' --libs
#
# Where 'ARCH' is should be one of: 'win-64', 'win-32', 'linux-64',
# 'linux-32' 'mac-64' and 'mac-32' (depending on the target being built for).

STATIC_OPENAL=0
TESSERACT=1
CAIRO=1
OPUS=1
SHAPELIB=1
GLEWMX=1
WHOLE_ARCH_ON=""
WHOLE_ARCH_OFF=""
LINK_ACFUTILS=1
OPENAL_VERSION="1.21.0"

cd "$(dirname "$0")"

ARCH="$1"
shift

if ! [ -f "openal-soft/openal-soft-$OPENAL_VERSION-$ARCH/build/install/lib/pkgconfig/openal.pc" ] &&
    [ -f "openal-soft/openal-soft-1.19.1-$ARCH/build/install/lib/pkgconfig/openal.pc" ]; then
	OPENAL_VERSION="1.19.1"
fi

# The order of arguments we pass to pkg-config is important. We must list
# dependencies FOLLOWING the dependents (so e.g. zlib AFTER libpng).
while [[ $# -gt 0 ]]; do
	case "$1" in
	--whole-archive)
		if [[ "$(uname)" != Darwin ]]; then
			WHOLE_ARCH_ON="-Wl,--whole-archive"
			WHOLE_ARCH_OFF="-Wl,--no-whole-archive"
		fi
		;;
	--static-openal)
		if [ -f "openal-soft/openal-soft-$OPENAL_VERSION-$ARCH/build/install/lib/pkgconfig/openal.pc" ]; then
			PACKAGES="$PACKAGES opusfile opus ogg openal"
			STATIC_OPENAL=1
		fi
		;;
	--glfw)
		PACKAGES="$PACKAGES glfw3"
		;;
	--no-tesseract)
		TESSERACT=0
		;;
	--no-cairo)
		CAIRO=0
		;;
	--no-shapelib)
		SHAPELIB=0
		;;
	--no-glewmx)
		GLEWMX=0
		;;
	--no-link-acfutils)
		LINK_ACFUTILS=0
		;;
	--openal-version=1.19.1)
		OPENAL_VERSION="1.19.1"
		;;
	*)
		break
		;;
	esac
	shift
done

if ! [ -f .minimal-deps ]; then
	PACKAGES="$PACKAGES geographiclib"
	if [[ "$TESSERACT" -ne 0 ]] &&  [ -f "cr/tesseract-$ARCH/lib/pkgconfig/tesseract.pc" ]; then
		PACKAGES="$PACKAGES tesseract lept"
	fi
	if [[ "$CAIRO" -ne 0 ]]; then
		PACKAGES="$PACKAGES cairo pixman-1 freetype2 libpng16"
	fi
	if [[ "$SHAPELIB" -ne 0 ]]; then
		PACKAGES="$PACKAGES shapelib proj"
	fi
	if [[ "$GLEWMX" -ne 0 ]]; then
		PACKAGES="$PACKAGES glewmx"
	fi
fi

PACKAGES="$PACKAGES libcurl openssl libxml-2.0 libpcre2-8 zlib"

PKG_CONFIG_PATH="\
$(pwd)/opus/opusfile-$ARCH/lib/pkgconfig:\
$(pwd)/opus/opus-$ARCH/lib/pkgconfig:\
$(pwd)/opus/libogg-$ARCH/install/lib/pkgconfig:\
$(pwd)/freetype/freetype-$ARCH/lib/pkgconfig:\
$(pwd)/libpng/libpng-$ARCH/lib/pkgconfig:\
$(pwd)/zlib/zlib-$ARCH/lib/pkgconfig:\
$(pwd)/cairo/cairo-$ARCH/lib/pkgconfig:\
$(pwd)/cairo/pixman-$ARCH/lib/pkgconfig:\
$(pwd)/curl/libcurl-$ARCH/lib/pkgconfig:\
$(pwd)/shapelib/libproj-$ARCH/lib/pkgconfig:\
$(pwd)/shapelib/libshape-$ARCH/lib/pkgconfig:\
$(pwd)/ssl/openssl-$ARCH/lib/pkgconfig:\
$(pwd)/ocr/liblept-$ARCH/lib/pkgconfig:\
$(pwd)/ocr/tesseract-$ARCH/lib/pkgconfig:\
$(pwd)/libxml2/libxml2-$ARCH/lib/pkgconfig:\
$(pwd)/openal-soft/openal-soft-$OPENAL_VERSION-$ARCH/build/install/lib/pkgconfig:\
$(pwd)/pcre2/pcre2-$ARCH/lib/pkgconfig:\
$(pwd)/glfw/glfw-$ARCH/install/lib/pkgconfig:\
$(pwd)/geographiclib/geographiclib-$ARCH/cmake"

if [[ "$ARCH" == "linux-64" ]]; then
	PKG_CONFIG_PATH="$PKG_CONFIG_PATH:\
$(pwd)/glew/glew-1.13.0-$ARCH/install/lib64/pkgconfig:\
$(pwd)/libclipboard/libclipboard-$ARCH/install/lib/pkgconfig"
	PACKAGES="$PACKAGES libclipboard"
else
	PKG_CONFIG_PATH="$PKG_CONFIG_PATH:\
$(pwd)/glew/glew-1.13.0-$ARCH/install/lib/pkgconfig"
fi

export PKG_CONFIG_PATH

if [[ "$1" = "--cflags" ]]; then
	CGLM_EXTRA="-I$(pwd)/cglm/cglm-0.7.9/include"
	PCRE2_EXTRA="-DPCRE2_CODE_UNIT_WIDTH=8"
	if [[ "$ARCH" = "mac-64" ]]; then
		GLEW_EXTRA="-DLACF_GLEW_USE_NATIVE_TLS=0"
	fi
	LIBICONV="-I$(pwd)/libiconv/libiconv-$ARCH/include"
	ACFUTILS_EXTRA="-I$(pwd)/src"
elif [[ "$1" = "--libs" ]]; then
	if [[ "$ARCH" = "win-64" ]]; then
		# This must be appended AFTER --whole-archive, otherwise
		# it produces linkage errors on Windows.
		OPENSSL_EXTRA="-lcrypt32 -lws2_32 -lgdi32"
		DBGEXTRA="-ldbghelp -lpsapi"
		STACKPROT_EXTRA="-Wl,-Bstatic -lssp -Wl,-Bdynamic"
		if [[ "$STATIC_OPENAL" = 1 ]]; then
			OPENAL_EXTRA="-lole32"
		fi
		WINMM_EXTRA="-lwinmm"
		WINBCRYPT_EXTRA="-lbcrypt"
	elif [[ "$ARCH" = "mac-64" ]]; then
		if [[ "$STATIC_OPENAL" = 1 ]]; then
			OPENAL_EXTRA="-lstdc++"
		fi
	fi
	LZMA="-L$(pwd)/lzma/qmake/$ARCH -llzma"
	LIBICONV="-L$(pwd)/libiconv/libiconv-$ARCH/lib -liconv"

	if [ "$LINK_ACFUTILS" -ne 0 ]; then
		if [[ "$ARCH" == "win-64" ]]; then
			ACFUTILS_EXTRA="-L$(pwd)/qmake/win64 -lacfutils"
		elif [[ "$ARCH" == "mac-64" ]]; then
			ACFUTILS_EXTRA="-L$(pwd)/qmake/mac64 -lacfutils"
		else
			ACFUTILS_EXTRA="-L$(pwd)/qmake/lin64 -lacfutils"
		fi
	fi

	if [[ "$ARCH" != "mac-64" ]]; then
		EXTRA="-static-libstdc++"
	fi
fi

echo $WHOLE_ARCH_ON ${ACFUTILS_EXTRA} ${LZMA} ${LIBICONV} \
    $(pkg-config $@ $PACKAGES) \
    $EXTRA $WHOLE_ARCH_OFF \
    $OPENSSL_EXTRA $DBGEXTRA ${CGLM_EXTRA} ${PCRE2_EXTRA} ${OPENAL_EXTRA} \
    ${GLEW_EXTRA} ${STACKPROT_EXTRA} ${WINBCRYPT_EXTRA} ${WINMM_EXTRA}
