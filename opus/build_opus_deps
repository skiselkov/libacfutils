#!/bin/bash

# CDDL HEADER START
#
# This file and its contents are supplied under the terms of the
# Common Development and Distribution License ("CDDL"), version 1.0.
# You may only use this file in accordance with the terms of version
# 1.0 of the CDDL.
#
# A full copy of the text of the CDDL should have accompanied this
# source.  A copy of the CDDL is also available via the Internet at
# http://www.illumos.org/license/CDDL.
#
# CDDL HEADER END

# Copyright 2024 Saso Kiselkov. All rights reserved.

source ../build_dep.common

OPUS="opus-1.2.1.tar.bz2"
LIBOGG="libogg-1.3.2.tar.bz2"
OPUSFILE="opusfile-0.7.tar.bz2"

OPUS_CONFOPTS_COMMON="--enable-static --disable-shared \
    --disable-extra-programs --with-pic --disable-silent-rules"
LIBOGG_CONFOPTS_COMMON="--enable-static --disable-shared --with-pic \
    --disable-silent-rules"

if [ -z "$minimal" ]; then
	minimal=0
fi

if [[ "$(uname)" = "Darwin" ]]; then
	CFLAGS_COMMON="-mmacosx-version-min=10.6"
	LDFLAGS_COMMON="-mmacosx-version-min=10.6"
fi

OPUS_CFLAGS_COMMON="$CFLAGS_COMMON\\ -DOPUS_EXPORT=''"

if [[ "$do_clean" = "1" ]]; then
	rm -fr "${OPUSFILE/%.tar.bz2//}" "${OPUS/%.tar.bz2//}" \
	    "${LIBOGG/%.tar.bz2//}" \
	    opusfile-{linux,win,mac}-{32,64} \
	    opus-{linux,win,mac}-{32,64} \
	    libogg-{linux,win,mac}-{32,64}
	exit
fi

case `uname` in
	Linux)
		NCPUS=$(( $(grep 'processor[[:space:]]\+:' /proc/cpuinfo \
		    | wc -l) + 1 ))
		CFLAGS="$OPUS_CFLAGS_COMMON\\ -m64" \
		    LDFLAGS="$LDFLAGS_COMMON\\ -m64" \
		    build_dep "linux-64" "$OPUS_CONFOPTS_COMMON" \
		    "$OPUS" "opus" ".libs/libopus.a" && \
		CFLAGS="$OPUS_CFLAGS_COMMON" LDFLAGS="$LDFLAGS_COMMON" \
		    build_dep "win-64" "$OPUS_CONFOPTS_COMMON \
		    --host=x86_64-w64-mingw32" \
		    "$OPUS" "opus" ".libs/libopus.a"
		;;
	Darwin)
		NCPUS=$(( $(sysctl -n hw.ncpu) + 1 ))
		CFLAGS="$OPUS_CFLAGS_COMMON" LDFLAGS="$LDFLAGS_COMMON" \
		    build_dep "mac-64" "$OPUS_CONFOPTS_COMMON \
		    --disable-intrinsics" "$OPUS" "opus" ".libs/libopus.a"
		;;
	*)
		echo "Unsupported build platform" >&2
		exit 1
		;;
esac

case `uname` in
	Linux)
		NCPUS=$(( $(grep 'processor[[:space:]]\+:' /proc/cpuinfo \
		    | wc -l) + 1 ))
		CFLAGS="$CFLAGS_COMMON\\ -m64" \
		    LDFLAGS="$LDFLAGS_COMMON\\ -m64" \
		    INSTALL_DIR="install" \
		    build_dep "linux-64" "$LIBOGG_CONFOPTS_COMMON" \
		    "$LIBOGG" "libogg" "src/.libs/libogg.a" && \
		CFLAGS="$CFLAGS_COMMON" LDFLAGS="$LDFLAGS_COMMON" \
		    INSTALL_DIR="install" \
		    build_dep "win-64" "$LIBOGG_CONFOPTS_COMMON \
		    --host=x86_64-w64-mingw32" \
		    "$LIBOGG" "libogg" "src/.libs/libogg.a"
		;;
	Darwin)
		NCPUS=$(( $(sysctl -n hw.ncpu) + 1 ))
		CFLAGS="$CFLAGS_COMMON" LDFLAGS="$LDFLAGS_COMMON" \
		    INSTALL_DIR="install" \
		    build_dep "mac-64" "$LIBOGG_CONFOPTS_COMMON" \
		    "$LIBOGG" "libogg" "src/.libs/libogg.a"
		;;
	*)
		echo "Unsupported build platform" >&2
		exit 1
		;;
esac

function build_opusfile() {
	ARCH="$1"
	HOST="$2"

	export DEPS_CFLAGS="$CFLAGS_COMMON $CFLAGS \
	    $(PKG_CONFIG_PATH=opus-$ARCH/lib/pkgconfig \
	    pkg-config --cflags opus) \
	    $(PKG_CONFIG_PATH=libogg-$ARCH/install/lib/pkgconfig \
	    pkg-config --cflags ogg)"
	export DEPS_LIBS="$LDFLAGS_COMMON $LDFLAGS \
	    $(PKG_CONFIG_PATH=opus-$ARCH/lib/pkgconfig \
	    pkg-config --libs opus) \
	    $(PKG_CONFIG_PATH=libogg-$ARCH/install/lib/pkgconfig \
	    pkg-config --libs ogg)"
	build_dep "$ARCH" "--disable-shared --enable-static --disable-http \
	    --disable-doc --with-pic --disable-silent-rules $HOST" \
	    "$OPUSFILE" "opusfile" ".libs/libopusfile.a" "opusfile.patch"
}

case `uname` in
	Linux)
		NCPUS=$(( $(grep 'processor[[:space:]]\+:' /proc/cpuinfo \
		    | wc -l) + 1 ))
		CFLAGS="-m64" LDFLAGS="-m64" build_opusfile "linux-64"
		if [ "$minimal" -ne 1 ]; then
			build_opusfile "win-64" "--host=x86_64-w64-mingw32"
		fi
		;;
	Darwin)
		NCPUS=$(( $(sysctl -n hw.ncpu) + 1 ))
		CFLAGS="-m64" LDFLAGS="-m64" build_opusfile "mac-64"
		;;
	*)
		echo "Unsupported build platform" >&2
		exit 1
		;;
esac
