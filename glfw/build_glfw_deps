#!/bin/bash

# CDDL HEADER START
#
# This file and its contents are supplied under the terms of the
# Common Development and Distribution License ("CDDL"), version 1.0.
# You may only use this file in accordance with the terms of version
# 1.0 of the CDDL.
#
# A full copy of the text of the CDDL should have accompanied this
# source.  A copy of the CDDL is also available via the Internet at
# http://www.illumos.org/license/CDDL.
#
# CDDL HEADER END

# Copyright 2024 Saso Kiselkov. All rights reserved.

source ../build_dep.common

GLFW_VERSION="3.3.8"
GLFW="glfw-${GLFW_VERSION}.tar.bz2"

function build_platform() {
	PLATFORM="$1"
	PRODUCT="$2"
	CMAKE_ARGS="$3"

	case $(uname) in
	Linux)
		NCPUS=$(( $(grep 'processor[[:space:]]\+:' /proc/cpuinfo \
		    | wc -l) + 1 ))
		;;
	Darwin)
		NCPUS=$(( $(sysctl -n hw.ncpu) + 1 ))
		CFLAGS_ADDTL="-DCMAKE_C_FLAGS=-mmacosx-version-min=10.9 -DCMAKE_OSX_ARCHITECTURES=x86_64;arm64"
		;;
	esac

	if [ -f "$PRODUCT" ]; then
		return 0
	fi
	rm -rf "glfw-$PLATFORM"
	mkdir -p "glfw-$PLATFORM"

	(
	    cd "glfw-$PLATFORM" && \
	    cmake $CFLAGS_ADDTL $LDFLAGS_ADDTL \
		-DCMAKE_INSTALL_PREFIX=$(pwd)/install $CMAKE_ARGS \
		"../glfw-${GLFW_VERSION}" && \
	    make -j$NJOBS && make install
	) || return 1
}

if ! [ -d "glfw-${GLFW_VERSION}" ]; then
	tar xjf "$GLFW"
fi

case `uname` in
	Linux)
		build_platform linux-64 "glfw-linux-64/install/lib/libglfw3.a" \
		    || exit 1
		if [ -z "$minimal" ] || [ "$minimal" -ne 1 ]; then
			build_platform win-64 \
			    "glfw-win-64/install/lib/libglfw3.a" \
			    -DCMAKE_TOOLCHAIN_FILE="../glfw-${GLFW_VERSION}/CMake/x86_64-w64-mingw32.cmake" || \
			    exit 1
		fi
		;;
	Darwin)
		build_platform mac-64 "glfw-mac-64/install/lib/libglfw3.a" \
		    || exit 1
		;;
	*)
		echo "Unsupported build platform" >&2
		exit 1
		;;
esac
